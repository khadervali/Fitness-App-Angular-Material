{"version":3,"sources":["./src/app/training/current-training/current-training.component.ts","./src/app/training/current-training/current-training.component.html","./src/app/training/new-training/new-training.component.ts","./src/app/training/new-training/new-training.component.html","./src/environments/environment.ts","./src/app/app-route.module.ts","./src/app/training/current-training/stop-training.component.ts","./src/app/welcome/welcome.component.ts","./src/app/welcome/welcome.component.html","./src/app/auth/signup/signup.component.html","./src/app/auth/signup/signup.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/training/training.component.html","./src/app/training/training.component.ts","./src/app/app.module.ts","./src/app/auth/login/login.component.html","./src/app/auth/login/login.component.ts","./src/app/navigation/sidenav/sidenav.component.ts","./src/app/navigation/sidenav/sidenav.component.html","./src/app/training/past-training/past-training.component.ts","./src/app/training/past-training/past-training.component.html","./src/app/auth/auth.service.ts","./src/app/auth/auth.gaurd.ts","./src/app/navigation/header/header.component.ts","./src/app/navigation/header/header.component.html","./src/app/material.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { StopTrainingComponent } from './stop-training.component';\n\n\n@Component({\n  selector: 'app-current-training',\n  templateUrl: './current-training.component.html',\n  styleUrls: ['./current-training.component.css']\n})\nexport class CurrentTrainingComponent implements OnInit {\n  @Output() onTrainingexit = new EventEmitter<void>();\n  progressStatus = 0;\n  timmer: number;\n  constructor(\n    private dialog: MatDialog\n  ) { }\n\n  ngOnInit(): void {\n    this.stopOrResumeTimmer();\n  }\n\n  stopOrResumeTimmer() {\n    this.timmer = setInterval(() => {\n      this.progressStatus = this.progressStatus + 25;\n      if (this.progressStatus >=100) {\n        clearInterval(this.timmer);\n      }\n    }, 1000);\n  }\n  onStopTraining() {\n    clearInterval(this.timmer);\n    const dialogRef = this.dialog.open(StopTrainingComponent, { data: {\n      progress: this.progressStatus\n    }});\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(result);\n      if(result) {\n        this.onTrainingexit.emit();\n      } else {\n        this.stopOrResumeTimmer();\n      }\n    })\n\n  }\n}\n","<section class=\"current-training\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n  <mat-progress-spinner mode=\"determinate\" [value]=\"progressStatus\"></mat-progress-spinner>\n  <h1>{{progressStatus}}%</h1>\n  <p>Keep Going. You can do It..!</p>\n  <button mat-raised-button color=\"accent\" (click)=\"onStopTraining()\">Stop</button>\n</section>\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-new-training',\n  templateUrl: './new-training.component.html',\n  styleUrls: ['./new-training.component.css']\n})\nexport class NewTrainingComponent implements OnInit {\n  @Output() trainingStarted = new EventEmitter<void>();\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  newTrainingStarted() {\n    this.trainingStarted.emit();\n  }\n}\n","<section class=\"new-training\" fxLayout fxLayoutAlign=\"center\">\n  <mat-card fxFlex.xs=\"100%\" fxFlex=\"400px\" >\n    <mat-card-title fxLayoutAlign=\"center\">\n      Start New Training!\n    </mat-card-title>\n    <mat-card-content fxLayoutAlign=\"center\">\n      <mat-form-field>\n        <mat-label>Choose Training...</mat-label>\n        <mat-select>\n          <mat-option value=\"crunches\">\n            Crunches\n          </mat-option>\n          <mat-option value=\"touch_toe\">\n            Touch Toe\n          </mat-option>\n          <mat-option value=\"burpees\">\n            Burpees\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    </mat-card-content>\n    <mat-card-actions fxLayoutAlign=\"center\">\n      <button mat-raised-button color=\"primary\" (click)=\"newTrainingStarted();\">Start</button>\n    </mat-card-actions>\n  </mat-card>\n</section>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { AuthGaurd } from './auth/auth.gaurd';\nimport { TrainingComponent } from './training/training.component';\nimport { LoginComponent } from './auth/login/login.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { SignupComponent } from './auth/signup/signup.component';\n\nconst rounts: Routes = [\n  {path: '', component: WelcomeComponent},\n  {path: 'signup', component: SignupComponent},\n  {path: 'login', component: LoginComponent},\n  {path: 'training', component: TrainingComponent, canActivate: [AuthGaurd]}\n];\n@NgModule({\n  imports: [RouterModule.forRoot(rounts)],\n  exports: [RouterModule],\n  providers: [AuthGaurd]\n})\nexport class AppRouteModule {}\n","import { Component, Inject } from \"@angular/core\";\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-stop-training',\n  template: `<h1 mat-dialog-title> Are you sure?</h1>\n            <mat-dialog-content> You Already reached {{ passedData.progress }}% </mat-dialog-content>\n            <mat-dialog-actions>\n              <button mat-raised-button [mat-dialog-close]=\"true\"> Yes</button>\n              <button mat-raised-button [mat-dialog-close]=\"false\"> No</button>\n            </mat-dialog-actions>`\n})\nexport class StopTrainingComponent {\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public passedData: any\n  ) {}\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"welcome\" fxLayout=\"column\" fxLayout.gt-md=\"row\" fxLayoutGap.gt-md=\"10px\" fxLayoutAlign=\"center center\">\n  <section>\n    <h1>Activity</h1>\n    <p>Stay Active and enjoy Better Health and more fun!</p>\n  </section>\n  <section>\n    <h1>Community</h1>\n    <p>Get to know other peoples who share your passion!</p>\n  </section>\n  <section>\n    <h1>Challenges</h1>\n    <p>Never stop, Dive into new challenges everyday!</p>\n  </section>\n</div>\n","<!-- <button mat-flat-button color=\"warn\"> Hello</button> -->\n<section class=\"signup-form\">\n  <form #f=\"ngForm\" fxLayout=\"column\" fxLayoutAlign=\"center center\" fxLayoutGap=\"10px\" (ngSubmit)=\"onSubmit(f)\">\n    <mat-form-field>\n      <input\n      type=\"email\"\n      matInput\n      placeholder=\"Your email\"\n      ngModel\n      name=\"email\"\n      email\n      required\n      #emailInput=\"ngModel\">\n      <mat-error *ngIf=\"!emailInput.hasError('required')\" >E-mail is invalid</mat-error>\n      <mat-error *ngIf=\"emailInput.hasError('required')\" >E-Mail field must not be empty.</mat-error>\n    </mat-form-field>\n      <mat-form-field hintLabel=\"Should be at least 6 character long.\">\n        <input\n        type=\"password\"\n        matInput\n        placeholder=\"Your Password\"\n        ngModel\n        name=\"password\"\n        minlength=\"6\"\n        required\n        #pwInput=\"ngModel\">\n        <mat-hint align=\"end\">{{pwInput.value?.length}} / 6</mat-hint>\n        <mat-error>Password mush be more than 6 character.</mat-error>\n      </mat-form-field>\n      <mat-form-field>\n        <input\n          matInput\n          placeholder=\"Choose your date of birth\"\n          [matDatepicker]=\"picker\"\n          [max]=\"maxDate\"\n          ngModel\n          name=\"dob\"\n          required>\n        <mat-datepicker-toggle\n          matSuffix\n          [for]=\"picker\">\n        </mat-datepicker-toggle>\n        <mat-datepicker\n          #picker>\n        </mat-datepicker>\n      </mat-form-field>\n      <mat-checkbox name=\"agree\" ngModel color=\"primary\" required #checkBox=\"ngModel\" (change)=\"agreedChecked()\"> <span id=\"agreed_text\">Agreed all the conditions.</span> </mat-checkbox>\n      <button mat-raised-button type=\"submit\" color=\"primary\" [disabled]=\"f.invalid\">Sign Up</button>\n  </form>\n</section>\n","import { AuthService } from './../auth.service';\nimport { ConstantPool } from '@angular/compiler';\nimport { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  maxDate;\n  constructor( private authService: AuthService) { }\n\n  ngOnInit(): void {\n      this.maxDate = new Date();\n      this.maxDate.setFullYear(this.maxDate.getFullYear() - 18);\n  }\n\n  onSubmit(form: NgForm) {\n    console.log(form);\n    if (!form.value.agree) {\n      document.getElementById('agreed_text').style.color = 'red';\n      return false;\n    }\n    this.authService.registerUser({\n      email: form.value.email,\n      password: form.value.password\n    });\n  }\n\n  agreedChecked() {\n    document.getElementById('agreed_text').style.color = 'black';\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'FitApp';\n}\n","<mat-sidenav-container>\n  <mat-sidenav #sideNav role=\"navigation\">\n      <app-sidenav (onCloseSideNav)=\"sideNav.close()\"></app-sidenav>\n  </mat-sidenav>\n  <mat-sidenav-content >\n      <app-header (onSideNavToggle)=\"sideNav.toggle()\"></app-header>\n    <main>\n      <router-outlet></router-outlet>\n    </main>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n\n","<section>\n  <mat-tab-group *ngIf=\"!ongoingTraining\">\n    <mat-tab label=\"New Exercise\">\n      <app-new-training (trainingStarted)=\"ongoingTraining=true\"></app-new-training>\n    </mat-tab>\n    <mat-tab label=\"Past Exercise\">\n      <app-past-training></app-past-training>\n    </mat-tab>\n  </mat-tab-group>\n  <app-current-training *ngIf=\"ongoingTraining\" (onTrainingexit)=\"ongoingTraining=false\"></app-current-training>\n</section>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-training',\n  templateUrl: './training.component.html',\n  styleUrls: ['./training.component.css']\n})\nexport class TrainingComponent implements OnInit {\n  ongoingTraining = false;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { AuthService } from './auth/auth.service';\nimport { StopTrainingComponent } from './training/current-training/stop-training.component';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { AppRouteModule } from './app-route.module';\nimport { MaterialModule } from './material.module';\nimport { SignupComponent } from './auth/signup/signup.component';\nimport { LoginComponent } from './auth/login/login.component';\nimport { TrainingComponent } from './training/training.component';\nimport { CurrentTrainingComponent } from './training/current-training/current-training.component';\nimport { NewTrainingComponent } from './training/new-training/new-training.component';\nimport { PastTrainingComponent } from './training/past-training/past-training.component';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { HeaderComponent } from './navigation/header/header.component';\nimport { SidenavComponent } from './navigation/sidenav/sidenav.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SignupComponent,\n    LoginComponent,\n    TrainingComponent,\n    CurrentTrainingComponent,\n    NewTrainingComponent,\n    PastTrainingComponent,\n    WelcomeComponent,\n    HeaderComponent,\n    SidenavComponent,\n    StopTrainingComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    AppRouteModule,\n    FlexLayoutModule,\n    FormsModule\n  ],\n  providers: [AuthService],\n  bootstrap: [AppComponent],\n  entryComponents: [StopTrainingComponent]\n})\nexport class AppModule { }\n","<section>\n  <form fxLayout=\"column\" fxLayoutAlign=\"center center\" fxLayoutGap=\"10px\" #f='ngForm' (ngSubmit)=\"onLogin(f)\">\n    <mat-form-field>\n      <input\n      type=\"email\"\n      matInput\n      required\n      email\n      ngModel\n      name=\"email\"\n      placeholder=\"Your Email\"\n      #emailInput=\"ngModel\">\n      <mat-error *ngIf=\"!emailInput.hasError('required')\" >E-mail is invalid</mat-error>\n      <mat-error *ngIf=\"emailInput.hasError('required')\" >E-Mail field must not be empty.</mat-error>\n    </mat-form-field>\n    <mat-form-field>\n      <input\n      type=\"password\"\n      matInput\n      required\n      ngModel\n      name=\"password\"\n      placeholder=\"Your Password\"\n      #pwInput='ngModel'>\n      <mat-error *ngIf=\"pwInput.hasError('required');\">Password missing.</mat-error>\n    </mat-form-field>\n    <button\n      mat-raised-button\n      color=\"primary\"\n      type=\"submit\"\n      [disabled]=\"f.invalid\">\n      Login\n    </button>\n  </form>\n</section>\n","import { AuthService } from './../auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n  onLogin(form: NgForm) {\n    console.log(form);\n    this.authService.loginUser({\n      email: form.value.email,\n      password: form.value.password\n    });\n\n  }\n}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { AuthService } from './../../auth/auth.service';\n\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.css']\n})\nexport class SidenavComponent implements OnInit {\n  @Output() onCloseSideNav = new EventEmitter<void>()\n  isAuth = false;\n  constructor(private authService: AuthService) { }\n\n  ngOnInit(): void {\n    this.authService.authChanged.subscribe(authChanged => {\n      this.isAuth = authChanged;\n    })\n  }\n  onCloseSideNavbar() {\n    this.onCloseSideNav.emit();\n  }\n\n  onLogout() {\n    this.authService.logout();\n  }\n}\n","<mat-nav-list>\n  <a *ngIf=\"!isAuth\" mat-list-item routerLink='signup' (click)=\"onCloseSideNavbar()\">\n    <mat-icon>people</mat-icon>\n    <span class=\"sidenav-item\">Sign Up</span>\n  </a>\n  <a *ngIf=\"!isAuth\" mat-list-item routerLink='login' (click)=\"onCloseSideNavbar()\">\n    <mat-icon> login </mat-icon>\n    <span class=\"sidenav-item\">Log In</span>\n  </a>\n  <a *ngIf=\"isAuth\" mat-list-item routerLink='training' (click)=\"onCloseSideNavbar()\">\n    <mat-icon>fitness_center</mat-icon>\n    <span class=\"sidenav-item\">Training</span>\n  </a>\n  <mat-list-item *ngIf=\"isAuth\">\n    <button mat-icon-button (click)=\"onCloseSideNavbar(); onLogout()\">\n      <mat-icon>logout</mat-icon>\n      <span class=\"sidenav-item\">Logout</span>\n    </button>\n  </mat-list-item>\n</mat-nav-list>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-past-training',\n  templateUrl: './past-training.component.html',\n  styleUrls: ['./past-training.component.css']\n})\nexport class PastTrainingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>past-training works!</p>\n","import { Injectable } from '@angular/core';\nimport { User } from './user.model';\nimport { AuthData } from './auth-data.model';\nimport { Subject } from 'rxjs/Subject';\nimport { Router } from'@angular/router';\n\n@Injectable()\nexport class AuthService {\n  authChanged = new Subject<boolean>();\n  private user: User;\n\n  constructor(private router: Router) {}\n\n  registerUser(userData: AuthData) {\n    this.user = {\n      email: userData.email,\n      userId: Math.round(Math.random() * 1000).toString()\n    };\n    this.getLoginSuccess();\n  }\n\n  loginUser(userData: AuthData) {\n    this.user = {\n      email: userData.email,\n      userId: Math.round(Math.random() * 1000).toString()\n    };\n    this.getLoginSuccess();\n  }\n\n  logout() {\n    this.user = null;\n    this.authChanged.next(false);\n    this.router.navigate(['login']);\n  }\n\n  getUser() {\n    return { ...this.user };\n  }\n\n  isAuth() {\n    return this.user !=null;\n  }\n\n  getLoginSuccess() {\n    this.authChanged.next(true);\n    this.router.navigate(['training']);\n  }\n}\n","import { AuthService } from './auth.service';\nimport { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\n\n@Injectable()\nexport class AuthGaurd implements CanActivate {\n\n  constructor(private authService: AuthService, private route: Router) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if(this.authService.isAuth()) {\n      return true;\n    } else {\n      this.route.navigate(['login']);\n    }\n  }\n\n}\n","import { Component, OnInit, EventEmitter, Output, OnDestroy } from '@angular/core';\nimport { AuthService } from '../../auth/auth.service';\nimport { Subscription } from 'rxjs/Subscription'\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n  @Output() onSideNavToggle = new EventEmitter<void>();\n  isAuth = false;\n  authSubscription = new Subscription;\n\nconstructor(private authService: AuthService) { }\n\n  ngOnInit(): void {\n    this.authSubscription = this.authService.authChanged.subscribe(authChange => {\n      this.isAuth = authChange;\n    })\n  }\n  onToggleSideNavBar() {\n    this.onSideNavToggle.emit();\n  }\n\n  logOut() {\n    this.authService.logout();\n  }\n\n  ngOnDestroy() {\n    this.authSubscription.unsubscribe();\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <div fxHide.gt-xs>\n    <button mat-icon-button (click)=\"onToggleSideNavBar()\">\n        <mat-icon>menu</mat-icon>\n    </button>\n  </div>\n  <div>\n   <a routerLink=\"/\">Logo</a>\n  </div>\n  <div fxFlex fxLayout fxLayoutAlign=\"flex-end\" fxHide.xs>\n    <ul fxLayout fxLayoutGap=\"10px\" class=\"navigation-menu\">\n      <li *ngIf=\"!isAuth\"><a routerLink=\"signup\">Sign Up</a></li>\n      <li *ngIf=\"!isAuth\"><a routerLink=\"login\">Log In</a></li>\n      <li *ngIf=\"isAuth\"> <a routerLink=\"training\">Training</a></li>\n      <li *ngIf=\"isAuth\"> <a (click)=\"logOut()\">Logout</a></li>\n    </ul>\n  </div>\n</mat-toolbar>\n","import { NgModule } from \"@angular/core\";\nimport { MatButtonModule }  from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatDialogModule } from '@angular/material/dialog';\n\nconst reqModules = [\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatCheckboxModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatListModule,\n    MatCardModule,\n    MatTabsModule,\n    MatSelectModule,\n    MatProgressSpinnerModule,\n    MatDialogModule\n]\n@NgModule({\n  imports: [...reqModules],\n  exports: [...reqModules]\n})\nexport class MaterialModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}
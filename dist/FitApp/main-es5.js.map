{"version":3,"sources":["webpack:///src/app/training/current-training/current-training.component.ts","webpack:///src/app/training/current-training/current-training.component.html","webpack:///src/app/training/new-training/new-training.component.ts","webpack:///src/app/training/new-training/new-training.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/app-route.module.ts","webpack:///src/app/training/current-training/stop-training.component.ts","webpack:///src/app/welcome/welcome.component.ts","webpack:///src/app/welcome/welcome.component.html","webpack:///src/app/auth/signup/signup.component.html","webpack:///src/app/auth/signup/signup.component.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/training/training.component.html","webpack:///src/app/training/training.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/auth/login/login.component.html","webpack:///src/app/auth/login/login.component.ts","webpack:///src/app/navigation/sidenav/sidenav.component.ts","webpack:///src/app/navigation/sidenav/sidenav.component.html","webpack:///src/app/training/past-training/past-training.component.ts","webpack:///src/app/training/past-training/past-training.component.html","webpack:///src/app/auth/auth.service.ts","webpack:///src/app/auth/auth.gaurd.ts","webpack:///src/app/navigation/header/header.component.ts","webpack:///src/app/navigation/header/header.component.html","webpack:///src/app/material.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["CurrentTrainingComponent","dialog","onTrainingexit","progressStatus","stopOrResumeTimmer","timmer","setInterval","clearInterval","dialogRef","open","data","progress","afterClosed","subscribe","result","console","log","emit","onStopTraining","NewTrainingComponent","trainingStarted","newTrainingStarted","environment","production","rounts","path","component","canActivate","AppRouteModule","forRoot","StopTrainingComponent","passedData","WelcomeComponent","SignupComponent","authService","maxDate","Date","setFullYear","getFullYear","form","value","agree","document","getElementById","style","color","registerUser","email","password","onSubmit","agreedChecked","AppComponent","title","TrainingComponent","ongoingTraining","AppModule","LoginComponent","loginUser","onLogin","SidenavComponent","onCloseSideNav","isAuth","authChanged","logout","PastTrainingComponent","AuthService","router","userData","user","userId","Math","round","random","toString","getLoginSuccess","next","navigate","AuthGaurd","route","state","HeaderComponent","onSideNavToggle","authSubscription","authChange","unsubscribe","onToggleSideNavBar","reqModules","MaterialModule","bootstrapModule","err","error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { StopTrainingComponent } from './stop-training.component';\n\n\n@Component({\n  selector: 'app-current-training',\n  templateUrl: './current-training.component.html',\n  styleUrls: ['./current-training.component.css']\n})\nexport class CurrentTrainingComponent implements OnInit {\n  @Output() onTrainingexit = new EventEmitter<void>();\n  progressStatus = 0;\n  timmer: number;\n  constructor(\n    private dialog: MatDialog\n  ) { }\n\n  ngOnInit(): void {\n    this.stopOrResumeTimmer();\n  }\n\n  stopOrResumeTimmer() {\n    this.timmer = setInterval(() => {\n      this.progressStatus = this.progressStatus + 25;\n      if (this.progressStatus >=100) {\n        clearInterval(this.timmer);\n      }\n    }, 1000);\n  }\n  onStopTraining() {\n    clearInterval(this.timmer);\n    const dialogRef = this.dialog.open(StopTrainingComponent, { data: {\n      progress: this.progressStatus\n    }});\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(result);\n      if(result) {\n        this.onTrainingexit.emit();\n      } else {\n        this.stopOrResumeTimmer();\n      }\n    })\n\n  }\n}\n","<section class=\"current-training\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n  <mat-progress-spinner mode=\"determinate\" [value]=\"progressStatus\"></mat-progress-spinner>\n  <h1>{{progressStatus}}%</h1>\n  <p>Keep Going. You can do It..!</p>\n  <button mat-raised-button color=\"accent\" (click)=\"onStopTraining()\">Stop</button>\n</section>\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-new-training',\n  templateUrl: './new-training.component.html',\n  styleUrls: ['./new-training.component.css']\n})\nexport class NewTrainingComponent implements OnInit {\n  @Output() trainingStarted = new EventEmitter<void>();\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  newTrainingStarted() {\n    this.trainingStarted.emit();\n  }\n}\n","<section class=\"new-training\" fxLayout fxLayoutAlign=\"center\">\n  <mat-card fxFlex.xs=\"100%\" fxFlex=\"400px\" >\n    <mat-card-title fxLayoutAlign=\"center\">\n      Start New Training!\n    </mat-card-title>\n    <mat-card-content fxLayoutAlign=\"center\">\n      <mat-form-field>\n        <mat-label>Choose Training...</mat-label>\n        <mat-select>\n          <mat-option value=\"crunches\">\n            Crunches\n          </mat-option>\n          <mat-option value=\"touch_toe\">\n            Touch Toe\n          </mat-option>\n          <mat-option value=\"burpees\">\n            Burpees\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    </mat-card-content>\n    <mat-card-actions fxLayoutAlign=\"center\">\n      <button mat-raised-button color=\"primary\" (click)=\"newTrainingStarted();\">Start</button>\n    </mat-card-actions>\n  </mat-card>\n</section>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { AuthGaurd } from './auth/auth.gaurd';\nimport { TrainingComponent } from './training/training.component';\nimport { LoginComponent } from './auth/login/login.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { SignupComponent } from './auth/signup/signup.component';\n\nconst rounts: Routes = [\n  {path: '', component: WelcomeComponent},\n  {path: 'signup', component: SignupComponent},\n  {path: 'login', component: LoginComponent},\n  {path: 'training', component: TrainingComponent, canActivate: [AuthGaurd]}\n];\n@NgModule({\n  imports: [RouterModule.forRoot(rounts)],\n  exports: [RouterModule],\n  providers: [AuthGaurd]\n})\nexport class AppRouteModule {}\n","import { Component, Inject } from \"@angular/core\";\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-stop-training',\n  template: `<h1 mat-dialog-title> Are you sure?</h1>\n            <mat-dialog-content> You Already reached {{ passedData.progress }}% </mat-dialog-content>\n            <mat-dialog-actions>\n              <button mat-raised-button [mat-dialog-close]=\"true\"> Yes</button>\n              <button mat-raised-button [mat-dialog-close]=\"false\"> No</button>\n            </mat-dialog-actions>`\n})\nexport class StopTrainingComponent {\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public passedData: any\n  ) {}\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"welcome\" fxLayout=\"column\" fxLayout.gt-md=\"row\" fxLayoutGap.gt-md=\"10px\" fxLayoutAlign=\"center center\">\n  <section>\n    <h1>Activity</h1>\n    <p>Stay Active and enjoy Better Health and more fun!</p>\n  </section>\n  <section>\n    <h1>Community</h1>\n    <p>Get to know other peoples who share your passion!</p>\n  </section>\n  <section>\n    <h1>Challenges</h1>\n    <p>Never stop, Dive into new challenges everyday!</p>\n  </section>\n</div>\n","<!-- <button mat-flat-button color=\"warn\"> Hello</button> -->\n<section class=\"signup-form\">\n  <form #f=\"ngForm\" fxLayout=\"column\" fxLayoutAlign=\"center center\" fxLayoutGap=\"10px\" (ngSubmit)=\"onSubmit(f)\">\n    <mat-form-field>\n      <input\n      type=\"email\"\n      matInput\n      placeholder=\"Your email\"\n      ngModel\n      name=\"email\"\n      email\n      required\n      #emailInput=\"ngModel\">\n      <mat-error *ngIf=\"!emailInput.hasError('required')\" >E-mail is invalid</mat-error>\n      <mat-error *ngIf=\"emailInput.hasError('required')\" >E-Mail field must not be empty.</mat-error>\n    </mat-form-field>\n      <mat-form-field hintLabel=\"Should be at least 6 character long.\">\n        <input\n        type=\"password\"\n        matInput\n        placeholder=\"Your Password\"\n        ngModel\n        name=\"password\"\n        minlength=\"6\"\n        required\n        #pwInput=\"ngModel\">\n        <mat-hint align=\"end\">{{pwInput.value?.length}} / 6</mat-hint>\n        <mat-error>Password mush be more than 6 character.</mat-error>\n      </mat-form-field>\n      <mat-form-field>\n        <input\n          matInput\n          placeholder=\"Choose your date of birth\"\n          [matDatepicker]=\"picker\"\n          [max]=\"maxDate\"\n          ngModel\n          name=\"dob\"\n          required>\n        <mat-datepicker-toggle\n          matSuffix\n          [for]=\"picker\">\n        </mat-datepicker-toggle>\n        <mat-datepicker\n          #picker>\n        </mat-datepicker>\n      </mat-form-field>\n      <mat-checkbox name=\"agree\" ngModel color=\"primary\" required #checkBox=\"ngModel\" (change)=\"agreedChecked()\"> <span id=\"agreed_text\">Agreed all the conditions.</span> </mat-checkbox>\n      <button mat-raised-button type=\"submit\" color=\"primary\" [disabled]=\"f.invalid\">Sign Up</button>\n  </form>\n</section>\n","import { AuthService } from './../auth.service';\nimport { ConstantPool } from '@angular/compiler';\nimport { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  maxDate;\n  constructor( private authService: AuthService) { }\n\n  ngOnInit(): void {\n      this.maxDate = new Date();\n      this.maxDate.setFullYear(this.maxDate.getFullYear() - 18);\n  }\n\n  onSubmit(form: NgForm) {\n    console.log(form);\n    if (!form.value.agree) {\n      document.getElementById('agreed_text').style.color = 'red';\n      return false;\n    }\n    this.authService.registerUser({\n      email: form.value.email,\n      password: form.value.password\n    });\n  }\n\n  agreedChecked() {\n    document.getElementById('agreed_text').style.color = 'black';\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'FitApp';\n}\n","<mat-sidenav-container>\n  <mat-sidenav #sideNav role=\"navigation\">\n      <app-sidenav (onCloseSideNav)=\"sideNav.close()\"></app-sidenav>\n  </mat-sidenav>\n  <mat-sidenav-content >\n      <app-header (onSideNavToggle)=\"sideNav.toggle()\"></app-header>\n    <main>\n      <router-outlet></router-outlet>\n    </main>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n\n","<section>\n  <mat-tab-group *ngIf=\"!ongoingTraining\">\n    <mat-tab label=\"New Exercise\">\n      <app-new-training (trainingStarted)=\"ongoingTraining=true\"></app-new-training>\n    </mat-tab>\n    <mat-tab label=\"Past Exercise\">\n      <app-past-training></app-past-training>\n    </mat-tab>\n  </mat-tab-group>\n  <app-current-training *ngIf=\"ongoingTraining\" (onTrainingexit)=\"ongoingTraining=false\"></app-current-training>\n</section>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-training',\n  templateUrl: './training.component.html',\n  styleUrls: ['./training.component.css']\n})\nexport class TrainingComponent implements OnInit {\n  ongoingTraining = false;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { AuthService } from './auth/auth.service';\nimport { StopTrainingComponent } from './training/current-training/stop-training.component';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { AppRouteModule } from './app-route.module';\nimport { MaterialModule } from './material.module';\nimport { SignupComponent } from './auth/signup/signup.component';\nimport { LoginComponent } from './auth/login/login.component';\nimport { TrainingComponent } from './training/training.component';\nimport { CurrentTrainingComponent } from './training/current-training/current-training.component';\nimport { NewTrainingComponent } from './training/new-training/new-training.component';\nimport { PastTrainingComponent } from './training/past-training/past-training.component';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { HeaderComponent } from './navigation/header/header.component';\nimport { SidenavComponent } from './navigation/sidenav/sidenav.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SignupComponent,\n    LoginComponent,\n    TrainingComponent,\n    CurrentTrainingComponent,\n    NewTrainingComponent,\n    PastTrainingComponent,\n    WelcomeComponent,\n    HeaderComponent,\n    SidenavComponent,\n    StopTrainingComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    AppRouteModule,\n    FlexLayoutModule,\n    FormsModule\n  ],\n  providers: [AuthService],\n  bootstrap: [AppComponent],\n  entryComponents: [StopTrainingComponent]\n})\nexport class AppModule { }\n","<section>\n  <form fxLayout=\"column\" fxLayoutAlign=\"center center\" fxLayoutGap=\"10px\" #f='ngForm' (ngSubmit)=\"onLogin(f)\">\n    <mat-form-field>\n      <input\n      type=\"email\"\n      matInput\n      required\n      email\n      ngModel\n      name=\"email\"\n      placeholder=\"Your Email\"\n      #emailInput=\"ngModel\">\n      <mat-error *ngIf=\"!emailInput.hasError('required')\" >E-mail is invalid</mat-error>\n      <mat-error *ngIf=\"emailInput.hasError('required')\" >E-Mail field must not be empty.</mat-error>\n    </mat-form-field>\n    <mat-form-field>\n      <input\n      type=\"password\"\n      matInput\n      required\n      ngModel\n      name=\"password\"\n      placeholder=\"Your Password\"\n      #pwInput='ngModel'>\n      <mat-error *ngIf=\"pwInput.hasError('required');\">Password missing.</mat-error>\n    </mat-form-field>\n    <button\n      mat-raised-button\n      color=\"primary\"\n      type=\"submit\"\n      [disabled]=\"f.invalid\">\n      Login\n    </button>\n  </form>\n</section>\n","import { AuthService } from './../auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n  onLogin(form: NgForm) {\n    console.log(form);\n    this.authService.loginUser({\n      email: form.value.email,\n      password: form.value.password\n    });\n\n  }\n}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { AuthService } from './../../auth/auth.service';\n\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.css']\n})\nexport class SidenavComponent implements OnInit {\n  @Output() onCloseSideNav = new EventEmitter<void>()\n  isAuth = false;\n  constructor(private authService: AuthService) { }\n\n  ngOnInit(): void {\n    this.authService.authChanged.subscribe(authChanged => {\n      this.isAuth = authChanged;\n    })\n  }\n  onCloseSideNavbar() {\n    this.onCloseSideNav.emit();\n  }\n\n  onLogout() {\n    this.authService.logout();\n  }\n}\n","<mat-nav-list>\n  <a *ngIf=\"!isAuth\" mat-list-item routerLink='signup' (click)=\"onCloseSideNavbar()\">\n    <mat-icon>people</mat-icon>\n    <span class=\"sidenav-item\">Sign Up</span>\n  </a>\n  <a *ngIf=\"!isAuth\" mat-list-item routerLink='login' (click)=\"onCloseSideNavbar()\">\n    <mat-icon> login </mat-icon>\n    <span class=\"sidenav-item\">Log In</span>\n  </a>\n  <a *ngIf=\"isAuth\" mat-list-item routerLink='training' (click)=\"onCloseSideNavbar()\">\n    <mat-icon>fitness_center</mat-icon>\n    <span class=\"sidenav-item\">Training</span>\n  </a>\n  <mat-list-item *ngIf=\"isAuth\">\n    <button mat-icon-button (click)=\"onCloseSideNavbar(); onLogout()\">\n      <mat-icon>logout</mat-icon>\n      <span class=\"sidenav-item\">Logout</span>\n    </button>\n  </mat-list-item>\n</mat-nav-list>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-past-training',\n  templateUrl: './past-training.component.html',\n  styleUrls: ['./past-training.component.css']\n})\nexport class PastTrainingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>past-training works!</p>\n","import { Injectable } from '@angular/core';\nimport { User } from './user.model';\nimport { AuthData } from './auth-data.model';\nimport { Subject } from 'rxjs/Subject';\nimport { Router } from'@angular/router';\n\n@Injectable()\nexport class AuthService {\n  authChanged = new Subject<boolean>();\n  private user: User;\n\n  constructor(private router: Router) {}\n\n  registerUser(userData: AuthData) {\n    this.user = {\n      email: userData.email,\n      userId: Math.round(Math.random() * 1000).toString()\n    };\n    this.getLoginSuccess();\n  }\n\n  loginUser(userData: AuthData) {\n    this.user = {\n      email: userData.email,\n      userId: Math.round(Math.random() * 1000).toString()\n    };\n    this.getLoginSuccess();\n  }\n\n  logout() {\n    this.user = null;\n    this.authChanged.next(false);\n    this.router.navigate(['login']);\n  }\n\n  getUser() {\n    return { ...this.user };\n  }\n\n  isAuth() {\n    return this.user !=null;\n  }\n\n  getLoginSuccess() {\n    this.authChanged.next(true);\n    this.router.navigate(['training']);\n  }\n}\n","import { AuthService } from './auth.service';\nimport { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\n\n@Injectable()\nexport class AuthGaurd implements CanActivate {\n\n  constructor(private authService: AuthService, private route: Router) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if(this.authService.isAuth()) {\n      return true;\n    } else {\n      this.route.navigate(['login']);\n    }\n  }\n\n}\n","import { Component, OnInit, EventEmitter, Output, OnDestroy } from '@angular/core';\nimport { AuthService } from '../../auth/auth.service';\nimport { Subscription } from 'rxjs/Subscription'\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n  @Output() onSideNavToggle = new EventEmitter<void>();\n  isAuth = false;\n  authSubscription = new Subscription;\n\nconstructor(private authService: AuthService) { }\n\n  ngOnInit(): void {\n    this.authSubscription = this.authService.authChanged.subscribe(authChange => {\n      this.isAuth = authChange;\n    })\n  }\n  onToggleSideNavBar() {\n    this.onSideNavToggle.emit();\n  }\n\n  logOut() {\n    this.authService.logout();\n  }\n\n  ngOnDestroy() {\n    this.authSubscription.unsubscribe();\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <div fxHide.gt-xs>\n    <button mat-icon-button (click)=\"onToggleSideNavBar()\">\n        <mat-icon>menu</mat-icon>\n    </button>\n  </div>\n  <div>\n   <a routerLink=\"/\">Logo</a>\n  </div>\n  <div fxFlex fxLayout fxLayoutAlign=\"flex-end\" fxHide.xs>\n    <ul fxLayout fxLayoutGap=\"10px\" class=\"navigation-menu\">\n      <li *ngIf=\"!isAuth\"><a routerLink=\"signup\">Sign Up</a></li>\n      <li *ngIf=\"!isAuth\"><a routerLink=\"login\">Log In</a></li>\n      <li *ngIf=\"isAuth\"> <a routerLink=\"training\">Training</a></li>\n      <li *ngIf=\"isAuth\"> <a (click)=\"logOut()\">Logout</a></li>\n    </ul>\n  </div>\n</mat-toolbar>\n","import { NgModule } from \"@angular/core\";\nimport { MatButtonModule }  from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatDialogModule } from '@angular/material/dialog';\n\nconst reqModules = [\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatCheckboxModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatListModule,\n    MatCardModule,\n    MatTabsModule,\n    MatSelectModule,\n    MatProgressSpinnerModule,\n    MatDialogModule\n]\n@NgModule({\n  imports: [...reqModules],\n  exports: [...reqModules]\n})\nexport class MaterialModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}